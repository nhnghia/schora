//------------------------------------------------------------------------------
// This code is distributed under GPL v2 licence.
// 
// This code is provided solely "as is". 
// There is no warranty or other guarantee of fitness of this code.
// The author disclaims all responsibility and liability 
// with respect to this code's usage
// or its effect upon hardware or computer systems.
// 
// author: Huu-Nghia Nguyen
// email : nhnghia@me.com
//------------------------------------------------------------------------------

// **********************
// Shipping choreography
// 2 roles: client (c) & shipper (s)
// REF: H. N. Nguyen, P. Poizat, and F. Zaidi: A Symbolic Framework for the Conformance Checking of Value-Passing Choreographies. 
//      In Proc. of ICSOC'2012, 2012, pp. 525-532.
// *********************
DECLARATIONS
    component spec chorD
        Request[c,s].<x_1> ; ([x_1 >= 5] |> PayShip[s,c] + [x_1 < 5] |> FreeShip[s,c])
    end component
    component client chorD
        Request[c,s]!<y> ; (FreeShip[s,c]? + PayShip[s,c]?)
    end component
    component shipper chorD
        Request[c,s]?z ; ([z >= 5] |> PayShip[s,c]! + [z < 5] |> FreeShip[s,c]!)
    end component
    component impl chorD
        client || shipper
    end component

// Mutation 1
    component impl1 chorD
        Request[c,s].<y_1> ; ([y_1 >= 5] |> Tel[c,s] ; PayShip[s,c] + [y_1 <5] |> FreeShip[s,c])
    end component

// Mutation 2
    component impl2 chorD
        Request[c,s].<y_1> ; [y_1 >= 5] |> Tel[c,s].<y> ; 
        ([y >= 10] |> PayShip[s,c] + [y < 10] |> skip + [y_1 <5] |> FreeShip[s,c])
    end component

COMMANDS
	//display STG graphics
	showSTG spec client shipper impl impl1 impl2
	//display statistics of STGs
	showStat client impl impl1 impl2


	showTime 	//show current time of the system ==> used to calculate execution time of commands
	conformance impl spec
	conformance impl1 spec
	conformance impl2 spec
	showTime	  
